{"title":"C++速转Python","slug":"c-to-python","date":"2020-07-12T19:02:38.000Z","updated":"2021-02-08T00:01:06.202Z","comments":true,"path":"api/articles/c-to-python.json","excerpt":"写在前面的话C++：库是他们的，我什么也没有。。。Python的库太香了，而且最近要搞基于Python的AI竞赛就当是复习了吧","covers":null,"content":"<html><head></head><body><h1 id=\"写在前面的话\"><a href=\"#写在前面的话\" class=\"headerlink\" title=\"写在前面的话\"></a>写在前面的话</h1><p>C++：库是他们的，我什么也没有。。。</p>\n<p>Python的库太香了，而且最近要搞基于Python的AI竞赛</p>\n<p>就当是复习了吧</p>\n<a id=\"more\"></a>\n<p>速成直接看<strong>这个例子</strong></p>\n<p>C++代码</p>\n<figure class=\"highlight c++\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\"><iostream></span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> a[<span class=\"number\">3</span>]={<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>};</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i<<span class=\"number\">3</span>;i++){</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&a[i]);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i<<span class=\"number\">3</span>){</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&a[i]);</span><br><span class=\"line\">\t\ti++;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>将if 与 while的()改为” “,并在结尾加上:</p>\n<p>将;去掉</p>\n<p>函数名从printf改为print</p>\n<p>数组把[]去掉</p>\n<p>去掉{}</p>\n<p><strong>行的格式正确（语句内的代码要空格）</strong></p>\n<p>然后。。。</p>\n<p>就差不多了（入门级的代码改变不需要import之类</p>\n<p>Python代码</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>]</span><br><span class=\"line\">i=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>):</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#\ti+=1</span></span><br><span class=\"line\">print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">i=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i>=<span class=\"number\">0</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\ti-=<span class=\"number\">1</span></span><br></pre></td></tr></tbody></table></figure>\n<p>想系统一点的话就看下面一堆东东</p>\n<p>可以了解一下，遇到函数不会的话可以直接查表</p>\n<h1 id=\"变量-Variable\"><a href=\"#变量-Variable\" class=\"headerlink\" title=\"变量(Variable)\"></a>变量(Variable)</h1><h2 id=\"赋值方法\"><a href=\"#赋值方法\" class=\"headerlink\" title=\"赋值方法\"></a>赋值方法</h2><ul>\n<li>Python中变量不用声明</li>\n<li>变量使用前必须赋值</li>\n<li>方法： 变量名=变量值</li>\n</ul>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python注释符为‘#’</span></span><br><span class=\"line\"><span class=\"comment\">#一般赋值</span></span><br><span class=\"line\">a=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\">#多变量赋值(注意变量名不能相同，这里只是为了演示)</span></span><br><span class=\"line\">a=b=c=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\">#为多个对象指定多个变量</span></span><br><span class=\"line\">a,b,c=<span class=\"number\">3</span>,<span class=\"string\">'hello'</span>,<span class=\"literal\">True</span><span class=\"comment\">#注意True大写</span></span><br><span class=\"line\"><span class=\"comment\">#链式赋值</span></span><br><span class=\"line\">a=b=b+<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">#增量赋值（和C一样</span></span><br><span class=\"line\">a=a+<span class=\"number\">1</span></span><br><span class=\"line\">a+=<span class=\"number\">1</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"变量的规范\"><a href=\"#变量的规范\" class=\"headerlink\" title=\"变量的规范\"></a>变量的规范</h2><ul>\n<li><strong>只能</strong>字母或下划线开头</li>\n<li>大小写敏感</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#可以使用type(variable)来获得类型（返回string</span></span><br><span class=\"line\">a=<span class=\"number\">1</span></span><br><span class=\"line\">type(a)</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"数字\"><a href=\"#数字\" class=\"headerlink\" title=\"数字\"></a>数字</h3><p>Python支持四种数值类型</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">int</th>\n<th style=\"text-align:center\">与C一样，但是在python3里无高精度（自动高精度）</th>\n<th>1，2，0x6f(16进制)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">float(浮点数)</td>\n<td style=\"text-align:center\">等于C的double类型</td>\n<td>1.0，-0.1，1.2e-4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">complex(复数)</td>\n<td style=\"text-align:center\">a+bj,或者complex(a,b)。a为实部，b为虚部。.real取出实部，.imag取出虚部</td>\n<td>1+2j,complex(1,2)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bool(布尔)</td>\n<td style=\"text-align:center\">True(对应1)/False(对应0)</td>\n<td>True,False</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"数值tips\"><a href=\"#数值tips\" class=\"headerlink\" title=\"数值tips:\"></a>数值tips:</h4><p>type()查看类型</p>\n<p>del()删除引用</p>\n<h4 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h4><p>与C一样</p>\n<p>但是有 *<em>操作，a*</em>b表示a的b次方</p>\n<p>还有地板除</p>\n<p>-11//4=-3</p>\n<p>如果其中一个操作数为负数，则结果将被保留，即从0向负无穷大舍去</p>\n<h4 id=\"数值运算符\"><a href=\"#数值运算符\" class=\"headerlink\" title=\"数值运算符\"></a>数值运算符</h4><p>与C一样</p>\n<h4 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h4><p>设a=True，b=False</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">“且”，两边同时为真才为真</td>\n<td style=\"text-align:center\">（a and b）结果为False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">or</td>\n<td style=\"text-align:center\">“或”，有一个是对的就对</td>\n<td style=\"text-align:center\">（a or b）结果为False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">not</td>\n<td style=\"text-align:center\">“非”，状态取反</td>\n<td style=\"text-align:center\">not(a and b)结果为True</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"数字内置函数\"><a href=\"#数字内置函数\" class=\"headerlink\" title=\"数字内置函数\"></a>数字内置函数</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">str(x)</td>\n<td style=\"text-align:center\">数值x转换为字符串类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int(x)</td>\n<td style=\"text-align:center\">x转换整数，（不四舍五入，直接取整数部分</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">float(x)</td>\n<td style=\"text-align:center\">将x转为浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">complex(x,y)</td>\n<td style=\"text-align:center\">转负数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bin(x)</td>\n<td style=\"text-align:center\">转2进制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hex(x)</td>\n<td style=\"text-align:center\">转16进制</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"数值内置函数\"><a href=\"#数值内置函数\" class=\"headerlink\" title=\"数值内置函数\"></a>数值内置函数</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">abs(x)</td>\n<td style=\"text-align:center\">取x的决定值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">min(x1,x2,x3)</td>\n<td style=\"text-align:center\">取最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">max(x1,x2,x3)</td>\n<td style=\"text-align:center\">取最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pow(x,y)</td>\n<td style=\"text-align:center\">计算x的y次方，=x**y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">round(x)</td>\n<td style=\"text-align:center\">四舍五入x到个位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">round(x,n)</td>\n<td style=\"text-align:center\">四舍五入x到小数点后n位</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"处理数值对象的模块\"><a href=\"#处理数值对象的模块\" class=\"headerlink\" title=\"处理数值对象的模块\"></a>处理数值对象的模块</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">math/cmath</td>\n<td style=\"text-align:center\">标准C库数学运算函数，常规在cmath，复数运算cmath</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">random</td>\n<td style=\"text-align:center\">多种伪随机数生成器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decimal</td>\n<td style=\"text-align:center\">十进制浮点运算类</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">array</td>\n<td style=\"text-align:center\">高效数值数组</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">operator</td>\n<td style=\"text-align:center\">数字运算符的函数实现</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"导入数学模块\"><a href=\"#导入数学模块\" class=\"headerlink\" title=\"导入数学模块\"></a>导入数学模块</h4><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> XXX</span><br><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"comment\">#任意皆可</span></span><br></pre></td></tr></tbody></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">pi</td>\n<td style=\"text-align:center\">圆周率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:center\">自然常数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sqrt(x)</td>\n<td style=\"text-align:center\">x的平方根</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sin(x),cos(x),cos(x),tan(x)</td>\n<td style=\"text-align:center\">x为弧度制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">exp(x)</td>\n<td style=\"text-align:center\">e的x次方</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log(x)  相当于ln,log(x,n) n为底数，x为对数,log10(x) 10为底数</td>\n<td style=\"text-align:center\">log函数</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"导入随机模块\"><a href=\"#导入随机模块\" class=\"headerlink\" title=\"导入随机模块\"></a>导入随机模块</h4><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> XXX</span><br><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"comment\">#任意皆可</span></span><br></pre></td></tr></tbody></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">choice(seq)</td>\n<td style=\"text-align:center\">来自列表，元组，或字符串的随机项目</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randrange([start],stop,[step])</td>\n<td style=\"text-align:center\">从（start，stop，step）中选择元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">random()</td>\n<td style=\"text-align:center\">返回随机浮点数（0<=r<1）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">seed([x])</td>\n<td style=\"text-align:center\">设置生成随机数的整数起始值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">shuffle(lst)</td>\n<td style=\"text-align:center\">将列表的项目随机化到位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uniform(x,y)</td>\n<td style=\"text-align:center\">返回随机浮点数r（x<=r<y）</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><ul>\n<li>单引号双引号都可以用</li>\n<li>长字符串可以用’ ‘ ‘</li>\n</ul>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p>注意函数和方法不一样</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">find()</td>\n<td style=\"text-align:center\">查找字符串中，若有就返回索引值，没有则返回-1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">index()</td>\n<td style=\"text-align:center\">查找字符串中，若有就返回索引值，没有则引发异常</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">replace(old,new)</td>\n<td style=\"text-align:center\">使用新的字符串替代原字符串中替代特定的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">split(str)</td>\n<td style=\"text-align:center\">根据分隔符str拆分字符串，默认以空格拆分</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lstrip()</td>\n<td style=\"text-align:center\">删除字符串中的所有前导空格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rstrip()</td>\n<td style=\"text-align:center\">删除字符串中的所有尾随空格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">strip()</td>\n<td style=\"text-align:center\">对字符串lstrip()和rstrip()</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">capitalize()</td>\n<td style=\"text-align:center\">把字符串的第一个字母转为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">islower()</td>\n<td style=\"text-align:center\">若字符串至少包含1个字母，且所有字符均为小写，则返回True，否则返回False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">isupper()</td>\n<td style=\"text-align:center\">若字符串至少包含1个可变大小写字母，且所有可变大小写字符均为大写，则返回True，否则返回False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lower()</td>\n<td style=\"text-align:center\">所有大写字母转小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">upper()</td>\n<td style=\"text-align:center\">所有小写字母转大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">join(seq)</td>\n<td style=\"text-align:center\">将序列seq中的元素以字符串合并到具有分隔符字符串的字符串中</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"字符串转义\"><a href=\"#字符串转义\" class=\"headerlink\" title=\"字符串转义\"></a>字符串转义</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\\\</td>\n<td style=\"text-align:center\">反斜线</td>\n<td style=\"text-align:center\">\\v</td>\n<td style=\"text-align:center\">纵向制表符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\‘</td>\n<td style=\"text-align:center\">单引号</td>\n<td style=\"text-align:center\">\\r</td>\n<td style=\"text-align:center\">回车符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\“</td>\n<td style=\"text-align:center\">双引号</td>\n<td style=\"text-align:center\">\\f</td>\n<td style=\"text-align:center\">换页符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\a</td>\n<td style=\"text-align:center\">发出系统响铃声</td>\n<td style=\"text-align:center\">\\o</td>\n<td style=\"text-align:center\">八进制数代表的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\n</td>\n<td style=\"text-align:center\">换行符</td>\n<td style=\"text-align:center\">\\x</td>\n<td style=\"text-align:center\">十六进制数代表的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\b</td>\n<td style=\"text-align:center\">退格符</td>\n<td style=\"text-align:center\">\\000</td>\n<td style=\"text-align:center\">终止符，后面字符串全部省略</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\t</td>\n<td style=\"text-align:center\">横向制表符</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>不想让转义生效时，就用r与R来定义原始字符串：</p>\n<p>print(r”\\t\\r”)</p>\n<h4 id=\"字符串格式化\"><a href=\"#字符串格式化\" class=\"headerlink\" title=\"字符串格式化\"></a>字符串格式化</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">%c</td>\n<td style=\"text-align:center\">格式化字符及其ASCIL码</td>\n<td style=\"text-align:center\">%f</td>\n<td style=\"text-align:center\">格式化浮点数字，可指定小数点后精度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%s</td>\n<td style=\"text-align:center\">格式化字符串</td>\n<td style=\"text-align:center\">%e</td>\n<td style=\"text-align:center\">科学技术法格式化浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%d</td>\n<td style=\"text-align:center\">格式化整数</td>\n<td style=\"text-align:center\">%E</td>\n<td style=\"text-align:center\">科学技术法格式化浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%u</td>\n<td style=\"text-align:center\">格式化无符号整数</td>\n<td style=\"text-align:center\">%g</td>\n<td style=\"text-align:center\">根据值的大小决定使用%f或%e</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%o</td>\n<td style=\"text-align:center\">格式化无符号八进制数</td>\n<td style=\"text-align:center\">%G</td>\n<td style=\"text-align:center\">根据值的大小决定使用%f或%e</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%x</td>\n<td style=\"text-align:center\">格式化无符号十六进制数</td>\n<td style=\"text-align:center\">%p</td>\n<td style=\"text-align:center\">用16进制格式化变量地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%X</td>\n<td style=\"text-align:center\">格式化无符号十六进制数（大写</td>\n<td style=\"text-align:center\">%%</td>\n<td style=\"text-align:center\">输出%</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>列表: [1,2,3,4,5]</li>\n</ul>\n<h3 id=\"列表（List）\"><a href=\"#列表（List）\" class=\"headerlink\" title=\"列表（List）\"></a>列表（List）</h3><ul>\n<li>格式：list=[a,b,c]</li>\n<li>特殊方法:list2=[1,’b’,c,[‘d’,e]]</li>\n<li>访问方法与C一样list[n]（访问第一个元素</li>\n<li>注意如果n=-2时则会访问倒数第二个元素</li>\n<li>list[1:3]会取到第一个还有第二个元素</li>\n</ul>\n<h4 id=\"列表常用方法\"><a href=\"#列表常用方法\" class=\"headerlink\" title=\"列表常用方法\"></a>列表常用方法</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">s.append(x)</td>\n<td style=\"text-align:center\">末尾添加x（元素）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.count(x)</td>\n<td style=\"text-align:center\">返回x出现的次数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.extend(iter)</td>\n<td style=\"text-align:center\">将iter的所有元素添加到</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.index(x)</td>\n<td style=\"text-align:center\">返回第x个元素的索引</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.insert(i,x)</td>\n<td style=\"text-align:center\">将元素x插入到索引i指定的元素前面，结果是s[i]=x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.pop(i)</td>\n<td style=\"text-align:center\">删除并返回x中索引为i的元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.remove(x)</td>\n<td style=\"text-align:center\">删除x中第一个x元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.reverse()</td>\n<td style=\"text-align:center\">反转排列顺序，（alist[::-1]在输出的时候会反过来，但实际不会</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.sort()</td>\n<td style=\"text-align:center\">升序排列s中元素</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>观察下面的程序，看看有什么发现</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">b=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]</span><br><span class=\"line\">c=(<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>)</span><br><span class=\"line\">a.append(b)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a.extend(b)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"><span class=\"comment\">#a+c失败，因为列表不能与元组相加</span></span><br><span class=\"line\">a.append(c)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a.extend(c)</span><br><span class=\"line\">print(a)</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"元组（tuple）\"><a href=\"#元组（tuple）\" class=\"headerlink\" title=\"元组（tuple）\"></a>元组（tuple）</h3><ul>\n<li>不可变序列（不能进行添加删除</li>\n<li>由不同元素组成</li>\n<li>元组代表一行数据，其中元素代表不同数据项</li>\n</ul>\n<h4 id=\"方法-1\"><a href=\"#方法-1\" class=\"headerlink\" title=\"方法\"></a>方法</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">x in tuple1</td>\n<td style=\"text-align:center\">若x是tuple1中的一个元素，则返回True，否则False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">len(tuple1)</td>\n<td style=\"text-align:center\">tuple1所包含的元素数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tuple1.count(x)</td>\n<td style=\"text-align:center\">元素x在元组中出现的次数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tuple1.index(x)</td>\n<td style=\"text-align:center\">元组tuple1中第一个元素x的索引，若x不在，则引发异常</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"字典（Dictionary）\"><a href=\"#字典（Dictionary）\" class=\"headerlink\" title=\"字典（Dictionary）\"></a>字典（Dictionary）</h3><ul>\n<li>用{ }扩起来，每对键值用:分开</li>\n<li>字典中的键必须唯一</li>\n<li>Python3.6的字典会保持插入后的值</li>\n<li>支持多级结构，既值可以为列表，字典</li>\n<li>字典通过key可以获取相应的value值</li>\n<li>多维字典访问dict[key] [索引下标]</li>\n<li>使用字典中不存在的键访问会报错</li>\n</ul>\n<h4 id=\"字典添加与删除方法\"><a href=\"#字典添加与删除方法\" class=\"headerlink\" title=\"字典添加与删除方法\"></a>字典添加与删除方法</h4><p>如果存在key，则更新value，不存在，就追加</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dict[<span class=\"string\">'work'</span>]=<span class=\"string\">'teacher'</span> </span><br><span class=\"line\">dict[<span class=\"string\">'age'</span>]=<span class=\"number\">25</span></span><br></pre></td></tr></tbody></table></figure>\n<p>使用del语句</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">del</span> dict[<span class=\"string\">'work'</span>]</span><br></pre></td></tr></tbody></table></figure>\n<h4 id=\"方法-2\"><a href=\"#方法-2\" class=\"headerlink\" title=\"方法\"></a>方法</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述与用法</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">d.items(),d.keys(),d.value()</td>\n<td style=\"text-align:center\">返回键值对/键/值 的视图</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.get(key)</td>\n<td style=\"text-align:center\">返回与key相关联的值</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.pop(key)</td>\n<td style=\"text-align:center\">删除键key，并返回与之相关的值</td>\n<td style=\"text-align:center\">dict.pop(‘age’)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.popitem()</td>\n<td style=\"text-align:center\">随机删除字典d中的某键值对，并返回相应的键值对</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.clear()</td>\n<td style=\"text-align:center\">删除d中的所有元素</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.fromkeys(s,t)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.update(e)</td>\n<td style=\"text-align:center\">将e中的键值队添加到字典中，e可能是字典，也可以是<strong>键值队序列</strong></td>\n<td style=\"text-align:center\">dict.update({‘married’:’yes’})</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.setdefault(key,v)</td>\n<td style=\"text-align:center\">如key包含在字典key中，则返回d中key对应的value，否则，将key，v添加到字典</td>\n<td style=\"text-align:center\">Dict.setdefault(age,30)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h3><ul>\n<li>不重复元素，无列表与字典应用广泛</li>\n<li>set()或{}创建（创空集时不能用{}</li>\n<li>作用：消除重复元素</li>\n<li>特性：union, intersection, difference, sysmmetric difference</li>\n</ul>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><p>英文博客写过，这里不再赘述</p>\n<h1 id=\"语句，关键字\"><a href=\"#语句，关键字\" class=\"headerlink\" title=\"语句，关键字\"></a>语句，关键字</h1><h2 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h2><p>以C++为对比</p>\n<p>去掉“;”,”()”</p>\n<p>在if尾部加上”:”</p>\n<p>注意对齐，python没有分号但是对齐很重要</p>\n<p>C++</p>\n<figure class=\"highlight c++\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\"><iostream></span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a<<span class=\"number\">20</span>){</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"a<20\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a>=<span class=\"number\">20</span> && a<<span class=\"number\">80</span>){</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"20<=a<80\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"a=%d,a>80\"</span>,a);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>Python</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> a<<span class=\"number\">20</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"a<20\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> a>=<span class=\"number\">20</span> <span class=\"keyword\">and</span> a<<span class=\"number\">80</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"20<=a<80\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"a= %d,a>80\"</span> %(a))</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><p>C++</p>\n<figure class=\"highlight c++\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\"><iostream></span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> a[<span class=\"number\">3</span>]={<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>};</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i<<span class=\"number\">3</span>;i++){</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&a[i]);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i<<span class=\"number\">3</span>){</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&a[i]);</span><br><span class=\"line\">\t\ti++;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">//Result:</span></span><br><span class=\"line\"><span class=\"comment\">//\t\u0004It \u0004is \u0018Mavericreate </span></span><br><span class=\"line\"><span class=\"comment\">//\t\u0004It \u0004is \u0018Mavericreate</span></span><br></pre></td></tr></tbody></table></figure>\n<p>Python</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>]</span><br><span class=\"line\">i=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>):</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">i=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i>=<span class=\"number\">0</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\ti-=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">#result:</span></span><br><span class=\"line\"><span class=\"comment\">#\tIt is Mavericreate </span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#\tMavericreate is It</span></span><br></pre></td></tr></tbody></table></figure>\n<h4 id=\"注意⚠️\"><a href=\"#注意⚠️\" class=\"headerlink\" title=\"注意⚠️\"></a>注意⚠️</h4><ul>\n<li>range()函数生成一个序列，返回一个range对象</li>\n<li>默认起始值为0，如 range(10)</li>\n<li>有反向range的打法，如 range(10,0,-1)</li>\n<li>上面最后的-1表示每次递增的量，为-的话就递减</li>\n</ul>\n<h4 id=\"Enumerate遍历方法\"><a href=\"#Enumerate遍历方法\" class=\"headerlink\" title=\"Enumerate遍历方法\"></a>Enumerate遍历方法</h4><p>enumerate()函数用于遍历序列中的元素与下标</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i,j <span class=\"keyword\">in</span> enumerate(<span class=\"string\">'abc'</span>):</span><br><span class=\"line\">\t print(i,j)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#1 b</span></span><br><span class=\"line\"><span class=\"comment\">#2 c</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p>关键字为特殊的标识符 （Python内部已有的标识符</p>\n<p>查看：</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> keyword</span><br><span class=\"line\">print(keyword.kwlist);</span><br><span class=\"line\">[<span class=\"string\">'False'</span>, <span class=\"string\">'None'</span>, <span class=\"string\">'True'</span>, <span class=\"string\">'and'</span>, <span class=\"string\">'as'</span>, <span class=\"string\">'assert'</span>, <span class=\"string\">'async'</span>, <span class=\"string\">'await'</span>, <span class=\"string\">'break'</span>, <span class=\"string\">'class'</span>, <span class=\"string\">'continue'</span>, <span class=\"string\">'def'</span>, <span class=\"string\">'del'</span>, <span class=\"string\">'elif'</span>, <span class=\"string\">'else'</span>, <span class=\"string\">'except'</span>, <span class=\"string\">'finally'</span>, <span class=\"string\">'for'</span>, <span class=\"string\">'from'</span>, <span class=\"string\">'global'</span>, <span class=\"string\">'if'</span>, <span class=\"string\">'import'</span>, <span class=\"string\">'in'</span>, <span class=\"string\">'is'</span>, <span class=\"string\">'lambda'</span>, <span class=\"string\">'nonlocal'</span>, <span class=\"string\">'not'</span>, <span class=\"string\">'or'</span>, <span class=\"string\">'pass'</span>, <span class=\"string\">'raise'</span>, <span class=\"string\">'return'</span>, <span class=\"string\">'try'</span>, <span class=\"string\">'while'</span>, <span class=\"string\">'with'</span>, <span class=\"string\">'yield'</span>]</span><br></pre></td></tr></tbody></table></figure>\n<p>大部分关键字与C++相同</p>\n<p>这里提一些没有的（我没在C++里看到的</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">含义</th>\n<th>示例</th>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">def</td>\n<td style=\"text-align:center\">定义函数或方法</td>\n<td></td>\n<td style=\"text-align:center\">raise</td>\n<td style=\"text-align:center\">异常抛出操作</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">except, try, finally</td>\n<td style=\"text-align:center\">捕捉异常</td>\n<td></td>\n<td style=\"text-align:center\">with</td>\n<td style=\"text-align:center\">简化语句</td>\n<td style=\"text-align:center\">with open(file) as fp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">global</td>\n<td style=\"text-align:center\">全局变量定义</td>\n<td></td>\n<td style=\"text-align:center\">yield</td>\n<td style=\"text-align:center\">从函数依次返回值</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">in</td>\n<td style=\"text-align:center\">判断是否在序列中</td>\n<td></td>\n<td style=\"text-align:center\">assert</td>\n<td style=\"text-align:center\">判断变量或表达式的值是否为真</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">class</td>\n<td style=\"text-align:center\">用于定义类</td>\n<td></td>\n<td style=\"text-align:center\">is</td>\n<td style=\"text-align:center\">判断变量是否为某个类</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">as</td>\n<td style=\"text-align:center\">类型转换</td>\n<td>import keyword as ke</td>\n<td style=\"text-align:center\">lamdba</td>\n<td style=\"text-align:center\">定义匿名变量</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>and, or, not</strong></td>\n<td style=\"text-align:center\">逻辑与,或，非操作</td>\n<td>if a and b:</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"内存管理\"><a href=\"#内存管理\" class=\"headerlink\" title=\"内存管理\"></a>内存管理</h1><p>在Python内，一切（数据结构）都是对象，对象就是申请的一块内存，一个对象一旦被创建，在内存中的大小就是不变的。</p>\n<h2 id=\"对象引用\"><a href=\"#对象引用\" class=\"headerlink\" title=\"对象引用\"></a>对象引用</h2><h3 id=\"赋值语句\"><a href=\"#赋值语句\" class=\"headerlink\" title=\"赋值语句\"></a>赋值语句</h3><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">1</span></span><br><span class=\"line\">print(id(a))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#result:</span></span><br><span class=\"line\"><span class=\"comment\">#4334942864</span></span><br><span class=\"line\"><span class=\"comment\">#表示这个为内存地址（每次地址可能都不一样</span></span><br></pre></td></tr></tbody></table></figure>\n<p>对于数字，字符串，None，即使是赋值，也只是创造了新的引用，而不是对象本身。</p>\n<h3 id=\"关键字if：判断指向的对象是否相同\"><a href=\"#关键字if：判断指向的对象是否相同\" class=\"headerlink\" title=\"关键字if：判断指向的对象是否相同\"></a>关键字if：判断指向的对象是否相同</h3><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a,b=<span class=\"number\">1</span>,<span class=\"number\">3</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#False</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=<span class=\"number\">1</span>,<span class=\"number\">1</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=<span class=\"string\">'apple'</span>,<span class=\"string\">'apple'</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>),(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#False</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=<span class=\"literal\">None</span>,<span class=\"literal\">None</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"引用次数\"><a href=\"#引用次数\" class=\"headerlink\" title=\"引用次数\"></a>引用次数</h3><p>在Python中，每个对象都存有指向该对象的引用总数，即引用次数（reference count）</p>\n<p>使用sys包中的gatrefcount(),来查看引用次数</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> getrefcount</span><br><span class=\"line\">a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">print(getrefcount(a))</span><br><span class=\"line\">b=a</span><br><span class=\"line\">print(getrefcount(b))</span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\">c=[a,a]</span><br><span class=\"line\">print(getrefcount(a))</span><br><span class=\"line\">print(c <span class=\"keyword\">is</span> a)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t2</span></span><br><span class=\"line\"><span class=\"comment\">#\t3</span></span><br><span class=\"line\"><span class=\"comment\">#\tTrue</span></span><br><span class=\"line\"><span class=\"comment\">#\t5</span></span><br><span class=\"line\"><span class=\"comment\">#\tFalse</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"引用环\"><a href=\"#引用环\" class=\"headerlink\" title=\"引用环\"></a>引用环</h3><p>两个对象可能互相引用，从而构成引用环（Reference cycle）</p>\n<p>即使是一个对象，只需要自己引用自己，也能构成引用环</p>\n<p>对回收内存带来麻烦</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> getrefcount</span><br><span class=\"line\">a=[]</span><br><span class=\"line\">b=[a]</span><br><span class=\"line\">a.append(b)</span><br><span class=\"line\">print(getrefcount(a),getrefcount(b))</span><br><span class=\"line\">print(id(a),id(b))</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t3 3</span></span><br><span class=\"line\"><span class=\"comment\">#\t4319390848 4319390784</span></span><br></pre></td></tr></tbody></table></figure>\n<p>回收内存</p>\n<p>对象越多，内存越大，使用del(a)清楚没用的对象</p>\n<p>垃圾回收启动时，Python扫描到这个引用计数为0的对象，就将它所占据的内存清空</p>\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><ul>\n<li><p>Python程序由包，模块，函数组成</p>\n</li>\n<li><p>包是模块组成的集合</p>\n</li>\n<li><p>模块是处理一类问题的函数与类的集合</p>\n</li>\n<li>函数是可以重复使用，用来实现单一，或相关联功能的代码块</li>\n<li>函数能提高应用的模块性以及代码的重复利用率</li>\n</ul>\n<h2 id=\"示范\"><a href=\"#示范\" class=\"headerlink\" title=\"示范\"></a>示范</h2><p>函数以def开头，加上名字还有括号内需要传递的变量</p>\n<p>与if一样用:</p>\n<p>也是用return 返回值 结束，没有则返回None</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Showname</span><span class=\"params\">(name)</span>:</span></span><br><span class=\"line\">\t<span class=\"string\">'''this function is to show name'''</span><span class=\"comment\">#文档字符串存放函数说明</span></span><br><span class=\"line\">\tprint(<span class=\"string\">'I am %s'</span> %(name))</span><br><span class=\"line\">Showname(<span class=\"string\">'Maverick'</span>)\t</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\tI am Maverick</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><p>形参：</p>\n<p><strong>形式参数</strong>，不占内存，只有在调用时才分配内存单元，目的是函数调用时接受实参</p>\n<p>实参：</p>\n<p><strong>实际参数</strong>，调用函数时传给函数的参数，可以是常量，变量，表达式，函数，传给形参</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">charge</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">\ta=<span class=\"number\">2</span></span><br><span class=\"line\">b=<span class=\"number\">1</span></span><br><span class=\"line\">charge(b)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">charge</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">\ta.append(<span class=\"number\">2</span>)</span><br><span class=\"line\">b=[<span class=\"number\">1</span>]</span><br><span class=\"line\">charge(b)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t[1, 2]</span></span><br></pre></td></tr></tbody></table></figure>\n<p>如果参数应用的对象本身是<strong>不可变</strong>的，如数值，字符串，元组，则在函数中对形参的修改<strong>不会影响</strong>到实参</p>\n<p>如果参数应用的对象本身是<strong>可变</strong>的，如列表，字典 则在函数中对形参的修改<strong>会影响</strong>到实参</p>\n<h3 id=\"参数类型\"><a href=\"#参数类型\" class=\"headerlink\" title=\"参数类型\"></a>参数类型</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:center\">定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">位置</td>\n<td style=\"text-align:center\">调用时根据函数定义的参数位置来传递</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认</td>\n<td style=\"text-align:center\">用于定义参数，提供默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">可变</td>\n<td style=\"text-align:center\">传入参数个数可变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">关键字</td>\n<td style=\"text-align:center\">用于函数调用，通过键值形式加以指定，可以让函数更清晰，容易使用，同时清除参数的顺序要求</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">命名关键字</td>\n<td style=\"text-align:center\">在*之后的参数只能通过关键字参数传递</td>\n</tr>\n</tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#位置参数</span></span><br><span class=\"line\"><span class=\"comment\">#位置固定。参数个数确认后，传入参数需要与之相同</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(greeting,name)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'Hello'</span>, <span class=\"string\">'Jack'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\tHello Jack!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#默认参数</span></span><br><span class=\"line\"><span class=\"comment\">#当参数没有实际传递的值时，函数将使用默认参数计算</span></span><br><span class=\"line\"><span class=\"comment\">#带默认值的参数需在无默认值的后面</span></span><br><span class=\"line\"><span class=\"comment\">#默认参数最好指向不变对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, greeting=<span class=\"string\">'hi'</span>)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'Jack'</span>,<span class=\"string\">'Hello'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\tHello Jack!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#默认参数#2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, greeting=[])</span>:</span></span><br><span class=\"line\">\tgreeting.append(<span class=\"string\">'hello'</span>)</span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'Jack'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'rose'</span>,[<span class=\"string\">'hi'</span>])</span><br><span class=\"line\">word(<span class=\"string\">'mary'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\t['hello'] Jack!</span></span><br><span class=\"line\"><span class=\"comment\">#\t['hi', 'hello'] rose!</span></span><br><span class=\"line\"><span class=\"comment\">#\t['hello', 'hello'] mary!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可变参数</span></span><br><span class=\"line\"><span class=\"comment\">#处理比声名多的参数</span></span><br><span class=\"line\"><span class=\"comment\">#*表示元组类型参数，**表示字典类型参数</span></span><br><span class=\"line\"><span class=\"comment\">#字典类型参数在元组类型后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, *greeting,**name1)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>,name1)</span><br><span class=\"line\">word(<span class=\"string\">'Jack'</span>,<span class=\"string\">'Hi'</span>,<span class=\"string\">'Nice to meet u'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\t('Hi', 'Nice to meet u') Jack! {}</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#关键字参数</span></span><br><span class=\"line\"><span class=\"comment\">#调用参数时，使用param=value的方式传递参数</span></span><br><span class=\"line\"><span class=\"comment\">#清晰指出参数值，提高程序可读性</span></span><br><span class=\"line\"><span class=\"comment\">#参数顺序不重要</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, greeting,name1)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>,name1)</span><br><span class=\"line\">word(greeting=<span class=\"string\">'Jack'</span>,name=<span class=\"string\">'hello'</span>,name1=<span class=\"string\">'rose'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\tJack hello! rose</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命名关键字参数</span></span><br><span class=\"line\"><span class=\"comment\">#必须传入参数名（不传报错</span></span><br><span class=\"line\"><span class=\"comment\">#若已有一个可变参数，则后面命名关键字参数不需要分隔符*</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name,*, greet=<span class=\"string\">'hi'</span>,word)</span>:</span></span><br><span class=\"line\">\tprint(greet, name,word)</span><br><span class=\"line\">word(<span class=\"string\">'TOM'</span>,greet=<span class=\"string\">'hello'</span>,word=<span class=\"string\">'how are you'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'TOM'</span>,word=<span class=\"string\">'how are you'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\thello TOM how are you</span></span><br><span class=\"line\"><span class=\"comment\">#\thi TOM how are you</span></span><br></pre></td></tr></tbody></table></figure>\n<p>在Python中，参数定义顺序必须是：</p>\n<p>位置参数，默认参数，可变参数，命名关键字参数，关键字参数</p>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>在python中创建，改变，查找变量名时，都在一个保存变量名的空间中进行，我们称为命名空间，也叫<strong>作用域</strong></p>\n<p>。。。</p>\n<p>先写这么多</p>\n<p>夏令营回来后补上吧</p>\n<p>看看有没有心情写写算法</p>\n</body></html>","more":"<p>速成直接看<strong>这个例子</strong></p>\n<p>C++代码</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> a[<span class=\"number\">3</span>]=&#123;<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&amp;a[i]);</span><br><span class=\"line\">\t\ti++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将if 与 while的()改为” “,并在结尾加上:</p>\n<p>将;去掉</p>\n<p>函数名从printf改为print</p>\n<p>数组把[]去掉</p>\n<p>去掉{}</p>\n<p><strong>行的格式正确（语句内的代码要空格）</strong></p>\n<p>然后。。。</p>\n<p>就差不多了（入门级的代码改变不需要import之类</p>\n<p>Python代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>]</span><br><span class=\"line\">i=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>):</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#\ti+=1</span></span><br><span class=\"line\">print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">i=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&gt;=<span class=\"number\">0</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\ti-=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>想系统一点的话就看下面一堆东东</p>\n<p>可以了解一下，遇到函数不会的话可以直接查表</p>\n<h1 id=\"变量-Variable\"><a href=\"#变量-Variable\" class=\"headerlink\" title=\"变量(Variable)\"></a>变量(Variable)</h1><h2 id=\"赋值方法\"><a href=\"#赋值方法\" class=\"headerlink\" title=\"赋值方法\"></a>赋值方法</h2><ul>\n<li>Python中变量不用声明</li>\n<li>变量使用前必须赋值</li>\n<li>方法： 变量名=变量值</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python注释符为‘#’</span></span><br><span class=\"line\"><span class=\"comment\">#一般赋值</span></span><br><span class=\"line\">a=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\">#多变量赋值(注意变量名不能相同，这里只是为了演示)</span></span><br><span class=\"line\">a=b=c=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\">#为多个对象指定多个变量</span></span><br><span class=\"line\">a,b,c=<span class=\"number\">3</span>,<span class=\"string\">'hello'</span>,<span class=\"literal\">True</span><span class=\"comment\">#注意True大写</span></span><br><span class=\"line\"><span class=\"comment\">#链式赋值</span></span><br><span class=\"line\">a=b=b+<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">#增量赋值（和C一样</span></span><br><span class=\"line\">a=a+<span class=\"number\">1</span></span><br><span class=\"line\">a+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"变量的规范\"><a href=\"#变量的规范\" class=\"headerlink\" title=\"变量的规范\"></a>变量的规范</h2><ul>\n<li><strong>只能</strong>字母或下划线开头</li>\n<li>大小写敏感</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#可以使用type(variable)来获得类型（返回string</span></span><br><span class=\"line\">a=<span class=\"number\">1</span></span><br><span class=\"line\">type(a)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数字\"><a href=\"#数字\" class=\"headerlink\" title=\"数字\"></a>数字</h3><p>Python支持四种数值类型</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">int</th>\n<th style=\"text-align:center\">与C一样，但是在python3里无高精度（自动高精度）</th>\n<th>1，2，0x6f(16进制)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">float(浮点数)</td>\n<td style=\"text-align:center\">等于C的double类型</td>\n<td>1.0，-0.1，1.2e-4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">complex(复数)</td>\n<td style=\"text-align:center\">a+bj,或者complex(a,b)。a为实部，b为虚部。.real取出实部，.imag取出虚部</td>\n<td>1+2j,complex(1,2)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bool(布尔)</td>\n<td style=\"text-align:center\">True(对应1)/False(对应0)</td>\n<td>True,False</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"数值tips\"><a href=\"#数值tips\" class=\"headerlink\" title=\"数值tips:\"></a>数值tips:</h4><p>type()查看类型</p>\n<p>del()删除引用</p>\n<h4 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h4><p>与C一样</p>\n<p>但是有 *<em>操作，a*</em>b表示a的b次方</p>\n<p>还有地板除</p>\n<p>-11//4=-3</p>\n<p>如果其中一个操作数为负数，则结果将被保留，即从0向负无穷大舍去</p>\n<h4 id=\"数值运算符\"><a href=\"#数值运算符\" class=\"headerlink\" title=\"数值运算符\"></a>数值运算符</h4><p>与C一样</p>\n<h4 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h4><p>设a=True，b=False</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">“且”，两边同时为真才为真</td>\n<td style=\"text-align:center\">（a and b）结果为False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">or</td>\n<td style=\"text-align:center\">“或”，有一个是对的就对</td>\n<td style=\"text-align:center\">（a or b）结果为False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">not</td>\n<td style=\"text-align:center\">“非”，状态取反</td>\n<td style=\"text-align:center\">not(a and b)结果为True</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"数字内置函数\"><a href=\"#数字内置函数\" class=\"headerlink\" title=\"数字内置函数\"></a>数字内置函数</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">str(x)</td>\n<td style=\"text-align:center\">数值x转换为字符串类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int(x)</td>\n<td style=\"text-align:center\">x转换整数，（不四舍五入，直接取整数部分</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">float(x)</td>\n<td style=\"text-align:center\">将x转为浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">complex(x,y)</td>\n<td style=\"text-align:center\">转负数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bin(x)</td>\n<td style=\"text-align:center\">转2进制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hex(x)</td>\n<td style=\"text-align:center\">转16进制</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"数值内置函数\"><a href=\"#数值内置函数\" class=\"headerlink\" title=\"数值内置函数\"></a>数值内置函数</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">abs(x)</td>\n<td style=\"text-align:center\">取x的决定值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">min(x1,x2,x3)</td>\n<td style=\"text-align:center\">取最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">max(x1,x2,x3)</td>\n<td style=\"text-align:center\">取最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pow(x,y)</td>\n<td style=\"text-align:center\">计算x的y次方，=x**y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">round(x)</td>\n<td style=\"text-align:center\">四舍五入x到个位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">round(x,n)</td>\n<td style=\"text-align:center\">四舍五入x到小数点后n位</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"处理数值对象的模块\"><a href=\"#处理数值对象的模块\" class=\"headerlink\" title=\"处理数值对象的模块\"></a>处理数值对象的模块</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">math/cmath</td>\n<td style=\"text-align:center\">标准C库数学运算函数，常规在cmath，复数运算cmath</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">random</td>\n<td style=\"text-align:center\">多种伪随机数生成器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decimal</td>\n<td style=\"text-align:center\">十进制浮点运算类</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">array</td>\n<td style=\"text-align:center\">高效数值数组</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">operator</td>\n<td style=\"text-align:center\">数字运算符的函数实现</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"导入数学模块\"><a href=\"#导入数学模块\" class=\"headerlink\" title=\"导入数学模块\"></a>导入数学模块</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> XXX</span><br><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"comment\">#任意皆可</span></span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">pi</td>\n<td style=\"text-align:center\">圆周率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:center\">自然常数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sqrt(x)</td>\n<td style=\"text-align:center\">x的平方根</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sin(x),cos(x),cos(x),tan(x)</td>\n<td style=\"text-align:center\">x为弧度制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">exp(x)</td>\n<td style=\"text-align:center\">e的x次方</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log(x)  相当于ln,log(x,n) n为底数，x为对数,log10(x) 10为底数</td>\n<td style=\"text-align:center\">log函数</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"导入随机模块\"><a href=\"#导入随机模块\" class=\"headerlink\" title=\"导入随机模块\"></a>导入随机模块</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> XXX</span><br><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"comment\">#任意皆可</span></span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">choice(seq)</td>\n<td style=\"text-align:center\">来自列表，元组，或字符串的随机项目</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randrange([start],stop,[step])</td>\n<td style=\"text-align:center\">从（start，stop，step）中选择元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">random()</td>\n<td style=\"text-align:center\">返回随机浮点数（0&lt;=r&lt;1）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">seed([x])</td>\n<td style=\"text-align:center\">设置生成随机数的整数起始值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">shuffle(lst)</td>\n<td style=\"text-align:center\">将列表的项目随机化到位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uniform(x,y)</td>\n<td style=\"text-align:center\">返回随机浮点数r（x&lt;=r&lt;y）</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><ul>\n<li>单引号双引号都可以用</li>\n<li>长字符串可以用’ ‘ ‘</li>\n</ul>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p>注意函数和方法不一样</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">find()</td>\n<td style=\"text-align:center\">查找字符串中，若有就返回索引值，没有则返回-1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">index()</td>\n<td style=\"text-align:center\">查找字符串中，若有就返回索引值，没有则引发异常</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">replace(old,new)</td>\n<td style=\"text-align:center\">使用新的字符串替代原字符串中替代特定的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">split(str)</td>\n<td style=\"text-align:center\">根据分隔符str拆分字符串，默认以空格拆分</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lstrip()</td>\n<td style=\"text-align:center\">删除字符串中的所有前导空格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rstrip()</td>\n<td style=\"text-align:center\">删除字符串中的所有尾随空格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">strip()</td>\n<td style=\"text-align:center\">对字符串lstrip()和rstrip()</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">capitalize()</td>\n<td style=\"text-align:center\">把字符串的第一个字母转为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">islower()</td>\n<td style=\"text-align:center\">若字符串至少包含1个字母，且所有字符均为小写，则返回True，否则返回False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">isupper()</td>\n<td style=\"text-align:center\">若字符串至少包含1个可变大小写字母，且所有可变大小写字符均为大写，则返回True，否则返回False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lower()</td>\n<td style=\"text-align:center\">所有大写字母转小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">upper()</td>\n<td style=\"text-align:center\">所有小写字母转大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">join(seq)</td>\n<td style=\"text-align:center\">将序列seq中的元素以字符串合并到具有分隔符字符串的字符串中</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"字符串转义\"><a href=\"#字符串转义\" class=\"headerlink\" title=\"字符串转义\"></a>字符串转义</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\\\</td>\n<td style=\"text-align:center\">反斜线</td>\n<td style=\"text-align:center\">\\v</td>\n<td style=\"text-align:center\">纵向制表符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\‘</td>\n<td style=\"text-align:center\">单引号</td>\n<td style=\"text-align:center\">\\r</td>\n<td style=\"text-align:center\">回车符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\“</td>\n<td style=\"text-align:center\">双引号</td>\n<td style=\"text-align:center\">\\f</td>\n<td style=\"text-align:center\">换页符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\a</td>\n<td style=\"text-align:center\">发出系统响铃声</td>\n<td style=\"text-align:center\">\\o</td>\n<td style=\"text-align:center\">八进制数代表的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\n</td>\n<td style=\"text-align:center\">换行符</td>\n<td style=\"text-align:center\">\\x</td>\n<td style=\"text-align:center\">十六进制数代表的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\b</td>\n<td style=\"text-align:center\">退格符</td>\n<td style=\"text-align:center\">\\000</td>\n<td style=\"text-align:center\">终止符，后面字符串全部省略</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\t</td>\n<td style=\"text-align:center\">横向制表符</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>不想让转义生效时，就用r与R来定义原始字符串：</p>\n<p>print(r”\\t\\r”)</p>\n<h4 id=\"字符串格式化\"><a href=\"#字符串格式化\" class=\"headerlink\" title=\"字符串格式化\"></a>字符串格式化</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">%c</td>\n<td style=\"text-align:center\">格式化字符及其ASCIL码</td>\n<td style=\"text-align:center\">%f</td>\n<td style=\"text-align:center\">格式化浮点数字，可指定小数点后精度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%s</td>\n<td style=\"text-align:center\">格式化字符串</td>\n<td style=\"text-align:center\">%e</td>\n<td style=\"text-align:center\">科学技术法格式化浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%d</td>\n<td style=\"text-align:center\">格式化整数</td>\n<td style=\"text-align:center\">%E</td>\n<td style=\"text-align:center\">科学技术法格式化浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%u</td>\n<td style=\"text-align:center\">格式化无符号整数</td>\n<td style=\"text-align:center\">%g</td>\n<td style=\"text-align:center\">根据值的大小决定使用%f或%e</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%o</td>\n<td style=\"text-align:center\">格式化无符号八进制数</td>\n<td style=\"text-align:center\">%G</td>\n<td style=\"text-align:center\">根据值的大小决定使用%f或%e</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%x</td>\n<td style=\"text-align:center\">格式化无符号十六进制数</td>\n<td style=\"text-align:center\">%p</td>\n<td style=\"text-align:center\">用16进制格式化变量地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%X</td>\n<td style=\"text-align:center\">格式化无符号十六进制数（大写</td>\n<td style=\"text-align:center\">%%</td>\n<td style=\"text-align:center\">输出%</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>列表: [1,2,3,4,5]</li>\n</ul>\n<h3 id=\"列表（List）\"><a href=\"#列表（List）\" class=\"headerlink\" title=\"列表（List）\"></a>列表（List）</h3><ul>\n<li>格式：list=[a,b,c]</li>\n<li>特殊方法:list2=[1,’b’,c,[‘d’,e]]</li>\n<li>访问方法与C一样list[n]（访问第一个元素</li>\n<li>注意如果n=-2时则会访问倒数第二个元素</li>\n<li>list[1:3]会取到第一个还有第二个元素</li>\n</ul>\n<h4 id=\"列表常用方法\"><a href=\"#列表常用方法\" class=\"headerlink\" title=\"列表常用方法\"></a>列表常用方法</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">s.append(x)</td>\n<td style=\"text-align:center\">末尾添加x（元素）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.count(x)</td>\n<td style=\"text-align:center\">返回x出现的次数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.extend(iter)</td>\n<td style=\"text-align:center\">将iter的所有元素添加到</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.index(x)</td>\n<td style=\"text-align:center\">返回第x个元素的索引</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.insert(i,x)</td>\n<td style=\"text-align:center\">将元素x插入到索引i指定的元素前面，结果是s[i]=x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.pop(i)</td>\n<td style=\"text-align:center\">删除并返回x中索引为i的元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.remove(x)</td>\n<td style=\"text-align:center\">删除x中第一个x元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.reverse()</td>\n<td style=\"text-align:center\">反转排列顺序，（alist[::-1]在输出的时候会反过来，但实际不会</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s.sort()</td>\n<td style=\"text-align:center\">升序排列s中元素</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>观察下面的程序，看看有什么发现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">b=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]</span><br><span class=\"line\">c=(<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>)</span><br><span class=\"line\">a.append(b)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a.extend(b)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"><span class=\"comment\">#a+c失败，因为列表不能与元组相加</span></span><br><span class=\"line\">a.append(c)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a.extend(c)</span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n<h3 id=\"元组（tuple）\"><a href=\"#元组（tuple）\" class=\"headerlink\" title=\"元组（tuple）\"></a>元组（tuple）</h3><ul>\n<li>不可变序列（不能进行添加删除</li>\n<li>由不同元素组成</li>\n<li>元组代表一行数据，其中元素代表不同数据项</li>\n</ul>\n<h4 id=\"方法-1\"><a href=\"#方法-1\" class=\"headerlink\" title=\"方法\"></a>方法</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">x in tuple1</td>\n<td style=\"text-align:center\">若x是tuple1中的一个元素，则返回True，否则False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">len(tuple1)</td>\n<td style=\"text-align:center\">tuple1所包含的元素数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tuple1.count(x)</td>\n<td style=\"text-align:center\">元素x在元组中出现的次数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tuple1.index(x)</td>\n<td style=\"text-align:center\">元组tuple1中第一个元素x的索引，若x不在，则引发异常</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"字典（Dictionary）\"><a href=\"#字典（Dictionary）\" class=\"headerlink\" title=\"字典（Dictionary）\"></a>字典（Dictionary）</h3><ul>\n<li>用{ }扩起来，每对键值用:分开</li>\n<li>字典中的键必须唯一</li>\n<li>Python3.6的字典会保持插入后的值</li>\n<li>支持多级结构，既值可以为列表，字典</li>\n<li>字典通过key可以获取相应的value值</li>\n<li>多维字典访问dict[key] [索引下标]</li>\n<li>使用字典中不存在的键访问会报错</li>\n</ul>\n<h4 id=\"字典添加与删除方法\"><a href=\"#字典添加与删除方法\" class=\"headerlink\" title=\"字典添加与删除方法\"></a>字典添加与删除方法</h4><p>如果存在key，则更新value，不存在，就追加</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dict[<span class=\"string\">'work'</span>]=<span class=\"string\">'teacher'</span> </span><br><span class=\"line\">dict[<span class=\"string\">'age'</span>]=<span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n<p>使用del语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">del</span> dict[<span class=\"string\">'work'</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法-2\"><a href=\"#方法-2\" class=\"headerlink\" title=\"方法\"></a>方法</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">描述与用法</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">d.items(),d.keys(),d.value()</td>\n<td style=\"text-align:center\">返回键值对/键/值 的视图</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.get(key)</td>\n<td style=\"text-align:center\">返回与key相关联的值</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.pop(key)</td>\n<td style=\"text-align:center\">删除键key，并返回与之相关的值</td>\n<td style=\"text-align:center\">dict.pop(‘age’)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.popitem()</td>\n<td style=\"text-align:center\">随机删除字典d中的某键值对，并返回相应的键值对</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.clear()</td>\n<td style=\"text-align:center\">删除d中的所有元素</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.fromkeys(s,t)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.update(e)</td>\n<td style=\"text-align:center\">将e中的键值队添加到字典中，e可能是字典，也可以是<strong>键值队序列</strong></td>\n<td style=\"text-align:center\">dict.update({‘married’:’yes’})</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d.setdefault(key,v)</td>\n<td style=\"text-align:center\">如key包含在字典key中，则返回d中key对应的value，否则，将key，v添加到字典</td>\n<td style=\"text-align:center\">Dict.setdefault(age,30)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h3><ul>\n<li>不重复元素，无列表与字典应用广泛</li>\n<li>set()或{}创建（创空集时不能用{}</li>\n<li>作用：消除重复元素</li>\n<li>特性：union, intersection, difference, sysmmetric difference</li>\n</ul>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><p>英文博客写过，这里不再赘述</p>\n<h1 id=\"语句，关键字\"><a href=\"#语句，关键字\" class=\"headerlink\" title=\"语句，关键字\"></a>语句，关键字</h1><h2 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h2><p>以C++为对比</p>\n<p>去掉“;”,”()”</p>\n<p>在if尾部加上”:”</p>\n<p>注意对齐，python没有分号但是对齐很重要</p>\n<p>C++</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&lt;<span class=\"number\">20</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"a&lt;20\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;=<span class=\"number\">20</span> &amp;&amp; a&lt;<span class=\"number\">80</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"20&lt;=a&lt;80\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"a=%d,a&gt;80\"</span>,a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> a&lt;<span class=\"number\">20</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"a&lt;20\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> a&gt;=<span class=\"number\">20</span> <span class=\"keyword\">and</span> a&lt;<span class=\"number\">80</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"20&lt;=a&lt;80\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"a= %d,a&gt;80\"</span> %(a))</span><br></pre></td></tr></table></figure>\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><p>C++</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> a[<span class=\"number\">3</span>]=&#123;<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s \"</span>,&amp;a[i]);</span><br><span class=\"line\">\t\ti++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Result:</span></span><br><span class=\"line\"><span class=\"comment\">//\t\u0004It \u0004is \u0018Mavericreate </span></span><br><span class=\"line\"><span class=\"comment\">//\t\u0004It \u0004is \u0018Mavericreate</span></span><br></pre></td></tr></table></figure>\n<p>Python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"string\">\"It\"</span>,<span class=\"string\">\"is\"</span>,<span class=\"string\">\"Mavericreate\"</span>]</span><br><span class=\"line\">i=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>):</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">i=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&gt;=<span class=\"number\">0</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"%s \"</span>%(a[i]),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\ti-=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">#result:</span></span><br><span class=\"line\"><span class=\"comment\">#\tIt is Mavericreate </span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#\tMavericreate is It</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"注意⚠️\"><a href=\"#注意⚠️\" class=\"headerlink\" title=\"注意⚠️\"></a>注意⚠️</h4><ul>\n<li>range()函数生成一个序列，返回一个range对象</li>\n<li>默认起始值为0，如 range(10)</li>\n<li>有反向range的打法，如 range(10,0,-1)</li>\n<li>上面最后的-1表示每次递增的量，为-的话就递减</li>\n</ul>\n<h4 id=\"Enumerate遍历方法\"><a href=\"#Enumerate遍历方法\" class=\"headerlink\" title=\"Enumerate遍历方法\"></a>Enumerate遍历方法</h4><p>enumerate()函数用于遍历序列中的元素与下标</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i,j <span class=\"keyword\">in</span> enumerate(<span class=\"string\">'abc'</span>):</span><br><span class=\"line\">\t print(i,j)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#1 b</span></span><br><span class=\"line\"><span class=\"comment\">#2 c</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p>关键字为特殊的标识符 （Python内部已有的标识符</p>\n<p>查看：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> keyword</span><br><span class=\"line\">print(keyword.kwlist);</span><br><span class=\"line\">[<span class=\"string\">'False'</span>, <span class=\"string\">'None'</span>, <span class=\"string\">'True'</span>, <span class=\"string\">'and'</span>, <span class=\"string\">'as'</span>, <span class=\"string\">'assert'</span>, <span class=\"string\">'async'</span>, <span class=\"string\">'await'</span>, <span class=\"string\">'break'</span>, <span class=\"string\">'class'</span>, <span class=\"string\">'continue'</span>, <span class=\"string\">'def'</span>, <span class=\"string\">'del'</span>, <span class=\"string\">'elif'</span>, <span class=\"string\">'else'</span>, <span class=\"string\">'except'</span>, <span class=\"string\">'finally'</span>, <span class=\"string\">'for'</span>, <span class=\"string\">'from'</span>, <span class=\"string\">'global'</span>, <span class=\"string\">'if'</span>, <span class=\"string\">'import'</span>, <span class=\"string\">'in'</span>, <span class=\"string\">'is'</span>, <span class=\"string\">'lambda'</span>, <span class=\"string\">'nonlocal'</span>, <span class=\"string\">'not'</span>, <span class=\"string\">'or'</span>, <span class=\"string\">'pass'</span>, <span class=\"string\">'raise'</span>, <span class=\"string\">'return'</span>, <span class=\"string\">'try'</span>, <span class=\"string\">'while'</span>, <span class=\"string\">'with'</span>, <span class=\"string\">'yield'</span>]</span><br></pre></td></tr></table></figure>\n<p>大部分关键字与C++相同</p>\n<p>这里提一些没有的（我没在C++里看到的</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">含义</th>\n<th>示例</th>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">def</td>\n<td style=\"text-align:center\">定义函数或方法</td>\n<td></td>\n<td style=\"text-align:center\">raise</td>\n<td style=\"text-align:center\">异常抛出操作</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">except, try, finally</td>\n<td style=\"text-align:center\">捕捉异常</td>\n<td></td>\n<td style=\"text-align:center\">with</td>\n<td style=\"text-align:center\">简化语句</td>\n<td style=\"text-align:center\">with open(file) as fp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">global</td>\n<td style=\"text-align:center\">全局变量定义</td>\n<td></td>\n<td style=\"text-align:center\">yield</td>\n<td style=\"text-align:center\">从函数依次返回值</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">in</td>\n<td style=\"text-align:center\">判断是否在序列中</td>\n<td></td>\n<td style=\"text-align:center\">assert</td>\n<td style=\"text-align:center\">判断变量或表达式的值是否为真</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">class</td>\n<td style=\"text-align:center\">用于定义类</td>\n<td></td>\n<td style=\"text-align:center\">is</td>\n<td style=\"text-align:center\">判断变量是否为某个类</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">as</td>\n<td style=\"text-align:center\">类型转换</td>\n<td>import keyword as ke</td>\n<td style=\"text-align:center\">lamdba</td>\n<td style=\"text-align:center\">定义匿名变量</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>and, or, not</strong></td>\n<td style=\"text-align:center\">逻辑与,或，非操作</td>\n<td>if a and b:</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"内存管理\"><a href=\"#内存管理\" class=\"headerlink\" title=\"内存管理\"></a>内存管理</h1><p>在Python内，一切（数据结构）都是对象，对象就是申请的一块内存，一个对象一旦被创建，在内存中的大小就是不变的。</p>\n<h2 id=\"对象引用\"><a href=\"#对象引用\" class=\"headerlink\" title=\"对象引用\"></a>对象引用</h2><h3 id=\"赋值语句\"><a href=\"#赋值语句\" class=\"headerlink\" title=\"赋值语句\"></a>赋值语句</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">1</span></span><br><span class=\"line\">print(id(a))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#result:</span></span><br><span class=\"line\"><span class=\"comment\">#4334942864</span></span><br><span class=\"line\"><span class=\"comment\">#表示这个为内存地址（每次地址可能都不一样</span></span><br></pre></td></tr></table></figure>\n<p>对于数字，字符串，None，即使是赋值，也只是创造了新的引用，而不是对象本身。</p>\n<h3 id=\"关键字if：判断指向的对象是否相同\"><a href=\"#关键字if：判断指向的对象是否相同\" class=\"headerlink\" title=\"关键字if：判断指向的对象是否相同\"></a>关键字if：判断指向的对象是否相同</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a,b=<span class=\"number\">1</span>,<span class=\"number\">3</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#False</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=<span class=\"number\">1</span>,<span class=\"number\">1</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=<span class=\"string\">'apple'</span>,<span class=\"string\">'apple'</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>),(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#False</span></span><br><span class=\"line\"></span><br><span class=\"line\">a,b=<span class=\"literal\">None</span>,<span class=\"literal\">None</span></span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"引用次数\"><a href=\"#引用次数\" class=\"headerlink\" title=\"引用次数\"></a>引用次数</h3><p>在Python中，每个对象都存有指向该对象的引用总数，即引用次数（reference count）</p>\n<p>使用sys包中的gatrefcount(),来查看引用次数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> getrefcount</span><br><span class=\"line\">a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">print(getrefcount(a))</span><br><span class=\"line\">b=a</span><br><span class=\"line\">print(getrefcount(b))</span><br><span class=\"line\">print(a <span class=\"keyword\">is</span> b)</span><br><span class=\"line\">c=[a,a]</span><br><span class=\"line\">print(getrefcount(a))</span><br><span class=\"line\">print(c <span class=\"keyword\">is</span> a)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t2</span></span><br><span class=\"line\"><span class=\"comment\">#\t3</span></span><br><span class=\"line\"><span class=\"comment\">#\tTrue</span></span><br><span class=\"line\"><span class=\"comment\">#\t5</span></span><br><span class=\"line\"><span class=\"comment\">#\tFalse</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"引用环\"><a href=\"#引用环\" class=\"headerlink\" title=\"引用环\"></a>引用环</h3><p>两个对象可能互相引用，从而构成引用环（Reference cycle）</p>\n<p>即使是一个对象，只需要自己引用自己，也能构成引用环</p>\n<p>对回收内存带来麻烦</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> getrefcount</span><br><span class=\"line\">a=[]</span><br><span class=\"line\">b=[a]</span><br><span class=\"line\">a.append(b)</span><br><span class=\"line\">print(getrefcount(a),getrefcount(b))</span><br><span class=\"line\">print(id(a),id(b))</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t3 3</span></span><br><span class=\"line\"><span class=\"comment\">#\t4319390848 4319390784</span></span><br></pre></td></tr></table></figure>\n<p>回收内存</p>\n<p>对象越多，内存越大，使用del(a)清楚没用的对象</p>\n<p>垃圾回收启动时，Python扫描到这个引用计数为0的对象，就将它所占据的内存清空</p>\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><ul>\n<li><p>Python程序由包，模块，函数组成</p>\n</li>\n<li><p>包是模块组成的集合</p>\n</li>\n<li><p>模块是处理一类问题的函数与类的集合</p>\n</li>\n<li>函数是可以重复使用，用来实现单一，或相关联功能的代码块</li>\n<li>函数能提高应用的模块性以及代码的重复利用率</li>\n</ul>\n<h2 id=\"示范\"><a href=\"#示范\" class=\"headerlink\" title=\"示范\"></a>示范</h2><p>函数以def开头，加上名字还有括号内需要传递的变量</p>\n<p>与if一样用:</p>\n<p>也是用return 返回值 结束，没有则返回None</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Showname</span><span class=\"params\">(name)</span>:</span></span><br><span class=\"line\">\t<span class=\"string\">'''this function is to show name'''</span><span class=\"comment\">#文档字符串存放函数说明</span></span><br><span class=\"line\">\tprint(<span class=\"string\">'I am %s'</span> %(name))</span><br><span class=\"line\">Showname(<span class=\"string\">'Maverick'</span>)\t</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\tI am Maverick</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><p>形参：</p>\n<p><strong>形式参数</strong>，不占内存，只有在调用时才分配内存单元，目的是函数调用时接受实参</p>\n<p>实参：</p>\n<p><strong>实际参数</strong>，调用函数时传给函数的参数，可以是常量，变量，表达式，函数，传给形参</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">charge</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">\ta=<span class=\"number\">2</span></span><br><span class=\"line\">b=<span class=\"number\">1</span></span><br><span class=\"line\">charge(b)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">charge</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">\ta.append(<span class=\"number\">2</span>)</span><br><span class=\"line\">b=[<span class=\"number\">1</span>]</span><br><span class=\"line\">charge(b)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"><span class=\"comment\">#Result:</span></span><br><span class=\"line\"><span class=\"comment\">#\t[1, 2]</span></span><br></pre></td></tr></table></figure>\n<p>如果参数应用的对象本身是<strong>不可变</strong>的，如数值，字符串，元组，则在函数中对形参的修改<strong>不会影响</strong>到实参</p>\n<p>如果参数应用的对象本身是<strong>可变</strong>的，如列表，字典 则在函数中对形参的修改<strong>会影响</strong>到实参</p>\n<h3 id=\"参数类型\"><a href=\"#参数类型\" class=\"headerlink\" title=\"参数类型\"></a>参数类型</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:center\">定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">位置</td>\n<td style=\"text-align:center\">调用时根据函数定义的参数位置来传递</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认</td>\n<td style=\"text-align:center\">用于定义参数，提供默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">可变</td>\n<td style=\"text-align:center\">传入参数个数可变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">关键字</td>\n<td style=\"text-align:center\">用于函数调用，通过键值形式加以指定，可以让函数更清晰，容易使用，同时清除参数的顺序要求</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">命名关键字</td>\n<td style=\"text-align:center\">在*之后的参数只能通过关键字参数传递</td>\n</tr>\n</tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#位置参数</span></span><br><span class=\"line\"><span class=\"comment\">#位置固定。参数个数确认后，传入参数需要与之相同</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(greeting,name)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'Hello'</span>, <span class=\"string\">'Jack'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\tHello Jack!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#默认参数</span></span><br><span class=\"line\"><span class=\"comment\">#当参数没有实际传递的值时，函数将使用默认参数计算</span></span><br><span class=\"line\"><span class=\"comment\">#带默认值的参数需在无默认值的后面</span></span><br><span class=\"line\"><span class=\"comment\">#默认参数最好指向不变对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, greeting=<span class=\"string\">'hi'</span>)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'Jack'</span>,<span class=\"string\">'Hello'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\tHello Jack!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#默认参数#2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, greeting=[])</span>:</span></span><br><span class=\"line\">\tgreeting.append(<span class=\"string\">'hello'</span>)</span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'Jack'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'rose'</span>,[<span class=\"string\">'hi'</span>])</span><br><span class=\"line\">word(<span class=\"string\">'mary'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\t['hello'] Jack!</span></span><br><span class=\"line\"><span class=\"comment\">#\t['hi', 'hello'] rose!</span></span><br><span class=\"line\"><span class=\"comment\">#\t['hello', 'hello'] mary!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可变参数</span></span><br><span class=\"line\"><span class=\"comment\">#处理比声名多的参数</span></span><br><span class=\"line\"><span class=\"comment\">#*表示元组类型参数，**表示字典类型参数</span></span><br><span class=\"line\"><span class=\"comment\">#字典类型参数在元组类型后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, *greeting,**name1)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>,name1)</span><br><span class=\"line\">word(<span class=\"string\">'Jack'</span>,<span class=\"string\">'Hi'</span>,<span class=\"string\">'Nice to meet u'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\t('Hi', 'Nice to meet u') Jack! &#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#关键字参数</span></span><br><span class=\"line\"><span class=\"comment\">#调用参数时，使用param=value的方式传递参数</span></span><br><span class=\"line\"><span class=\"comment\">#清晰指出参数值，提高程序可读性</span></span><br><span class=\"line\"><span class=\"comment\">#参数顺序不重要</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name, greeting,name1)</span>:</span></span><br><span class=\"line\">\tprint(greeting, name+<span class=\"string\">'!'</span>,name1)</span><br><span class=\"line\">word(greeting=<span class=\"string\">'Jack'</span>,name=<span class=\"string\">'hello'</span>,name1=<span class=\"string\">'rose'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\tJack hello! rose</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命名关键字参数</span></span><br><span class=\"line\"><span class=\"comment\">#必须传入参数名（不传报错</span></span><br><span class=\"line\"><span class=\"comment\">#若已有一个可变参数，则后面命名关键字参数不需要分隔符*</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">word</span><span class=\"params\">(name,*, greet=<span class=\"string\">'hi'</span>,word)</span>:</span></span><br><span class=\"line\">\tprint(greet, name,word)</span><br><span class=\"line\">word(<span class=\"string\">'TOM'</span>,greet=<span class=\"string\">'hello'</span>,word=<span class=\"string\">'how are you'</span>)</span><br><span class=\"line\">word(<span class=\"string\">'TOM'</span>,word=<span class=\"string\">'how are you'</span>)</span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"comment\">#\thello TOM how are you</span></span><br><span class=\"line\"><span class=\"comment\">#\thi TOM how are you</span></span><br></pre></td></tr></table></figure>\n<p>在Python中，参数定义顺序必须是：</p>\n<p>位置参数，默认参数，可变参数，命名关键字参数，关键字参数</p>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>在python中创建，改变，查找变量名时，都在一个保存变量名的空间中进行，我们称为命名空间，也叫<strong>作用域</strong></p>\n<p>。。。</p>\n<p>先写这么多</p>\n<p>夏令营回来后补上吧</p>\n<p>看看有没有心情写写算法</p>","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}